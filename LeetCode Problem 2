import java.lang.Math;
import java.util.ArrayList;


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode createLL(ArrayList<Integer> ans,int idx){
        if (idx==ans.size()){
            ListNode curr = null;
            return curr;
        }
        ListNode curr = new ListNode(ans.get(idx),createLL(ans,idx+1));
        return curr;
    }
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode currNodeA = l1;
        ListNode currNodeB = l2;
        int num1=0;
        int num2=0;
        int sum=0;
        int i=0,j=0;
        while(currNodeA!=null){
            num1 += currNodeA.val * Math.pow(10,i);
            currNodeA = currNodeA.next;
            i++;
        }
        
        while(currNodeB!=null){
            num2 += currNodeB.val*Math.pow(10,j);
            currNodeB = currNodeB.next;
            j++;
        }
        sum = num1+num2;
        
        ArrayList<Integer> ans = new ArrayList<Integer>();
        if (sum==0) ans.add(0);
        while(sum!=0){
            ans.add(sum%10);
            sum/=10;
        }

        return createLL(ans,0);
        

        

    }
}
